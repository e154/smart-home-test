name: Build and Deploy

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
    branches:
      - main

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build_public:
    name: Build public
    strategy:
      matrix:
        node: [ 16 ]
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Build public
        id: build-public
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: make build_public

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: public_build
          path: ./build
          retention-days: 1

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

  build_common:
    name: Build common
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build common
        id: build-common
        run: make build_common_structure

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: common_build
          path: ./tmp/common
          retention-days: 1

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

      - name: upload common artifact
        uses: softprops/action-gh-release@v1
        with:
          files: ./common.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_artefacts:
    name: Build artefacts
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build artefacts
        id: build-artefacts
        run: make build_artefacts

      - name: upload server linux amd64
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux arm64
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux arm v6
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_arm_v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux arm v7
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_arm_v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux ppc64le
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_ppc64le
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux riscv64
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_riscv64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload server linux s390x
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/linux_s390x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_image_upload:
    name: Upload docker images
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: trying to upload docker image
        run: make publish
